{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 570def9adc41683db5a8","webpack:///./src/errors.js","webpack:///./src/Cents.js","webpack:///./src/Harmonic.js","webpack:///./src/Math.js","webpack:///./src/Note.js","webpack:///./src/InstrumentString.js","webpack:///./src/index.js","webpack:///./src/HarmonicCalculator.js","webpack:///./src/Instrument.js"],"names":["CustomError","message","constructor","name","stack","Error","prototype","Object","create","InvalidArgumentError","RuntimeError","Cents","lower","upper","Math","isEqual","log","frequency","a4","frequenciesToCents","cents","base","pow","stringFrequency","centsOverString","centsToStringLength","Harmonic","halfStop","baseStop","number","round","gcd","defineProperty","value","writable","getSoundingFrequency","stringLength","centsToFrequency","exclusive","harmonics","numerator","push","EPSILON","a","b","abs","isGreaterThan","toNearest","nearest","toDecimalPlaces","dp","multiplier","ACCIDENTALS","none","natural","sharp","flat","doubleSharp","doubleFlat","quarterSharp","quarterFlat","threeQuarterSharp","threeQuarterFlat","PATTERN_NAME","RegExp","PATTERN_OCTAVE","PATTERN_DIFFERENCE","PATTERN_ACCIDENTAL_SHARP","PATTERN_ACCIDENTAL_FLAT","PATTERN_ACCIDENTAL_QUARTER","PATTERN_ACCIDENTAL_3_QUARTER","ACCIDENTAL_PATTERNS","normalizeAccidental","accidental","trim","replacement","test","accidentalCents","nameCents","defaultPreferredAccidentals","Note","octave","difference","output","preferredAccidentals","rounded","floor","centsWithoutOctave","names","keys","length","noteName","find","key","undefined","fromCents","frequencyToCents","rest","matches","match","toUpperCase","replace","spacesPattern","parseInt","e","diffOctave","InstrumentString","stringNumber","physicalLength","HarmonicCalculator","Instrument","getPhysicalDistanceBetweenStops","harmonic","physicalStringLength","getBowedDistance","minStopDistance","maxStopDistance","minBowedDistance","maxSoundingNoteDifference","soundingNote","soundingNoteFrequency","getFrequency","fundamental","frequencyToStringLength","harmonicsForNumber","findNaturalHarmonicsForNumber","filter","getStringLengthsFromNumber","isNatural","distance","instrumentString","findNaturalHarmonics","findArtificialHarmonics","validatePhysicalDistance","instrument","strings","findHarmonics","presets","stringFrequencies","clef","stringNames","index","string","fromName","preset","fromNames"],"mappings":"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","file":"strings.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"strings\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"strings\"] = factory();\n\telse\n\t\troot[\"strings\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 570def9adc41683db5a8","class CustomError {\n  constructor(message) {\n    this.message = message || this.constructor.name;\n    this.stack = (new Error()).stack;\n  }\n}\nCustomError.prototype = Object.create(Error.prototype);\n\nclass InvalidArgumentError extends CustomError {}\n\nclass RuntimeError extends CustomError {}\n\nexport { InvalidArgumentError, RuntimeError };\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/errors.js","import { InvalidArgumentError } from './errors';\n\nexport default class Cents {\n  static frequenciesToCents(lower, upper) {\n    return Math.isEqual(lower, 0) ? 0 : 1200 * (Math.log(upper / lower) / Math.log(2));\n  }\n\n  static frequencyToCents(frequency, a4 = 440) {\n    return Cents.frequenciesToCents(a4, frequency) + 900;\n  }\n\n  static centsToFrequency(cents, base) {\n    return base * Math.pow(2, cents / 1200);\n  }\n\n  static centsToStringLength(cents) {\n    return 1 / Math.pow(2, cents / 1200);\n  }\n\n  static frequencyToStringLength(frequency, stringFrequency) {\n    if (Math.isEqual(frequency, 0)) {\n      throw new InvalidArgumentError(`Invalid (zero) frequency: ${frequency}`);\n    }\n    const centsOverString = this.frequenciesToCents(stringFrequency, frequency);\n\n    return this.centsToStringLength(centsOverString);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Cents.js","import Cents from './Cents';\nimport Math from './Math';\nimport { InvalidArgumentError } from './errors';\n\nexport default class Harmonic {\n  constructor(halfStop, baseStop, stringFrequency) {\n    if (halfStop > baseStop) {\n      throw new InvalidArgumentError('The half-stop cannot be lower than the base stop.');\n    }\n\n    this.halfStop = halfStop;\n    this.baseStop = baseStop;\n    this.stringFrequency = stringFrequency;\n  }\n\n  get number() {\n    const number = Math.round(1 / Math.gcd(1, this.halfStop / this.baseStop));\n    Object.defineProperty(this, 'number', {value: number, writable: false});\n\n    return number;\n  }\n\n  get isNatural() {\n    return Math.isEqual(this.baseStop, 1);\n  }\n\n  get isOpenString() {\n    return Math.isEqual(this.halfStop, 1) && Math.isEqual(this.baseStop, 1);\n  }\n\n  get frequency() {\n    const frequency = Harmonic.getSoundingFrequency(this.number, this.baseStop, this.stringFrequency);\n    Object.defineProperty(this, 'frequency', {value: frequency, writable: false});\n\n    return frequency;\n  }\n\n  static getSoundingFrequency(number, stringLength, stringFrequency) {\n    const centsOverString = Cents.frequenciesToCents(stringLength, 1);\n\n    return Cents.centsToFrequency(centsOverString, stringFrequency) * number;\n  }\n\n  static getStringLengthsFromNumber(number, exclusive = false) {\n    let harmonics = [];\n    for (let numerator = number; numerator >= 1; numerator--) {\n      if (!exclusive || numerator === 1 || Math.isEqual(Math.gcd(numerator, number), 1)) {\n        harmonics.push(numerator / number);\n      }\n    }\n\n    return harmonics;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Harmonic.js","const EPSILON = 0.0000000001;\n\nMath.isEqual = function (a, b) {\n  return Math.abs(a - b) < EPSILON;\n};\n\nMath.isGreaterThan = function (a, b) {\n  return a > b && a - b > EPSILON;\n};\n\nMath.gcd = function (a, b) {\n  return this.isEqual(b, 0) ? a : this.gcd(b, a % b);\n};\n\nMath.toNearest = function (number, nearest = 1) {\n  return Math.round(number / nearest) * nearest;\n};\n\nMath.toDecimalPlaces = function (number, dp = 0) {\n  if (dp === 0) {\n    return Math.round(number);\n  }\n  const multiplier = this.pow(10, dp);\n\n  return Math.round(number * multiplier) / multiplier;\n};\n\nexport default Math;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Math.js","import Cents from './Cents';\nimport { InvalidArgumentError, RuntimeError } from './errors';\n\nexport const ACCIDENTALS = {\n  none: '',\n  natural: '♮',\n  sharp: '♯',\n  flat: '♭',\n  doubleSharp: 'x',\n  doubleFlat: '♭♭',\n  quarterSharp: '¼♯',\n  quarterFlat: '¼♭',\n  threeQuarterSharp: '¾♯',\n  threeQuarterFlat: '¾♭'\n};\n\nconst PATTERN_NAME = new RegExp('^ *[a-g]', 'i');\nconst PATTERN_OCTAVE = new RegExp('[/ ]*([\\-]? *[0-9]+)');\nconst PATTERN_DIFFERENCE = new RegExp('([+-]? *[0-9]+(\\.[0-9]+)?) *(c(ent)?s?|¢)', 'iu');\n\nconst PATTERN_ACCIDENTAL_SHARP = '([♯s#]|sh(arp)?)';\nconst PATTERN_ACCIDENTAL_FLAT = '([♭fb]|fl(at)?)';\nconst PATTERN_ACCIDENTAL_QUARTER = '(q|quarter|¼|1/4)[ -]?';\nconst PATTERN_ACCIDENTAL_3_QUARTER = '((three|3)[ -]q|quarter|¾|3/4)[ -]?';\n\nconst ACCIDENTAL_PATTERNS = {\n  [ACCIDENTALS.none]: '',\n  [ACCIDENTALS.natural]: '([♮n]|nat(ural)?)',\n  [ACCIDENTALS.flat]: PATTERN_ACCIDENTAL_FLAT,\n  [ACCIDENTALS.sharp]: PATTERN_ACCIDENTAL_SHARP,\n  [ACCIDENTALS.quarterFlat]: '(d|-|' + PATTERN_ACCIDENTAL_QUARTER + PATTERN_ACCIDENTAL_FLAT + ')',\n  [ACCIDENTALS.quarterSharp]: '(\\\\+|' + PATTERN_ACCIDENTAL_QUARTER + PATTERN_ACCIDENTAL_SHARP + ')',\n  [ACCIDENTALS.doubleFlat]: '(𝄫|bb|double[ -]' + PATTERN_ACCIDENTAL_FLAT + ')',\n  [ACCIDENTALS.doubleSharp]: '(𝄪|♯♯|##|double[ -]' + PATTERN_ACCIDENTAL_SHARP + ')',\n  [ACCIDENTALS.threeQuarterFlat]:\n    '(db|' + PATTERN_ACCIDENTAL_FLAT + '-|' + PATTERN_ACCIDENTAL_3_QUARTER + PATTERN_ACCIDENTAL_FLAT + ')',\n  [ACCIDENTALS.threeQuarterSharp]:\n    '(\\\\+\\\\+|' + PATTERN_ACCIDENTAL_SHARP + '\\\\+|' + PATTERN_ACCIDENTAL_3_QUARTER + PATTERN_ACCIDENTAL_SHARP + ')'\n};\n\nconst normalizeAccidental = function (accidental) {\n  accidental = accidental.trim();\n\n  for (const replacement in ACCIDENTAL_PATTERNS) {\n    if (accidental === replacement ||\n      new RegExp('^' + ACCIDENTAL_PATTERNS[replacement] + '$', 'iu').test(accidental)) {\n      return replacement;\n    }\n  }\n\n  throw new InvalidArgumentError(`Invalid accidental: \"${accidental}\"`);\n};\n\nconst accidentalCents = {\n  [ACCIDENTALS.none]: 0,\n  [ACCIDENTALS.natural]: 0,\n  [ACCIDENTALS.flat]: -100,\n  [ACCIDENTALS.sharp]: 100,\n  [ACCIDENTALS.quarterFlat]: -50,\n  [ACCIDENTALS.quarterSharp]: 50,\n  [ACCIDENTALS.doubleFlat]: -200,\n  [ACCIDENTALS.doubleSharp]: 200,\n  [ACCIDENTALS.threeQuarterFlat]: -150,\n  [ACCIDENTALS.threeQuarterSharp]: 150\n};\n\nconst nameCents = {\n  'C': 0,\n  'D': 200,\n  'E': 400,\n  'F': 500,\n  'G': 700,\n  'A': 900,\n  'B': 1100\n};\n\nconst defaultPreferredAccidentals = [\n  ACCIDENTALS.none,\n  ACCIDENTALS.natural,\n  ACCIDENTALS.sharp,\n  ACCIDENTALS.flat,\n  ACCIDENTALS.quarterSharp,\n  ACCIDENTALS.quarterFlat,\n  ACCIDENTALS.doubleSharp,\n  ACCIDENTALS.doubleFlat,\n  ACCIDENTALS.threeQuarterSharp,\n  ACCIDENTALS.threeQuarterFlat\n];\n\nexport default class Note {\n  constructor(name, accidental = '', octave = 4, difference = 0) {\n    if (octave > 1000) {\n      throw new InvalidArgumentError(`Invalid octave: ${octave}`);\n    }\n\n    this.name = name;\n    this.accidental = accidental;\n    this.octave = octave;\n    this.difference = difference;\n  }\n\n  static fromCents(cents, preferredAccidentals = []) {\n    const rounded = Math.toNearest(cents, 50),\n      difference = Math.toDecimalPlaces(cents - rounded, 2),\n      octave = Math.floor(rounded / 1200) + 4,\n      centsWithoutOctave = rounded - ((octave - 4) * 1200),\n      names = Object.keys(nameCents);\n\n    // If the preferredAccidentals contains only a natural, also prefer flats.\n    if (preferredAccidentals.length === 1 &&\n      (preferredAccidentals[0] === ACCIDENTALS.none || preferredAccidentals[0] === ACCIDENTALS.natural)) {\n      preferredAccidentals.push(ACCIDENTALS.flat, ACCIDENTALS.quarterFlat);\n    }\n\n    for (const accidental of [...preferredAccidentals, ...defaultPreferredAccidentals]) {\n      const cents = centsWithoutOctave - accidentalCents[accidental],\n        noteName = names.find(key => nameCents[key] === cents);\n      if (noteName !== undefined) {\n        return new Note(noteName, accidental, octave, difference);\n      }\n    }\n\n    throw new RuntimeError(`Failed to find note name for cents: ${cents}`);\n  }\n\n  static fromFrequency(frequency, a4 = 440, preferredAccidentals = []) {\n    return Note.fromCents(Cents.frequencyToCents(frequency, a4), preferredAccidentals);\n  }\n\n  static fromName(name, {octave = 4, accidental = ACCIDENTALS.none, difference = 0} = {}) {\n    let rest = name;\n\n    // Extract the note name (A-G).\n    let matches = rest.match(PATTERN_NAME);\n    if (matches === null) {\n      throw new InvalidArgumentError(`Invalid note: \"${name}\" (it should start with a letter, A-G)`);\n    }\n    const noteName = matches[0].toUpperCase();\n    rest = rest.replace(PATTERN_NAME, '').trim();\n\n    const spacesPattern = / +/;\n\n    // Extract the cents difference (e.g. +2c).\n    matches = rest.match(PATTERN_DIFFERENCE);\n    if (matches !== null) {\n      difference = matches[1].replace(spacesPattern, '');\n      rest = rest.replace(PATTERN_DIFFERENCE, '').trim();\n    }\n\n    // Extract the octave.\n    matches = rest.match(PATTERN_OCTAVE);\n    if (matches !== null) {\n      octave = parseInt(matches[1].replace(spacesPattern, ''), 10);\n      rest = rest.replace(PATTERN_OCTAVE, '').trim();\n    }\n\n    // The rest of the string (if any) is treated as the accidental.\n    accidental = rest || accidental;\n    try {\n      accidental = normalizeAccidental(accidental);\n    } catch (e) {\n      if (e instanceof InvalidArgumentError) {\n        throw new InvalidArgumentError(`Invalid note: \"${name}\" (unrecognised: \"${accidental}\")`);\n      }\n      throw e;\n    }\n\n    // Normalize the octave and cents difference.\n    if (difference >= 1200) {\n      const diffOctave = Math.round(difference / 1200);\n      octave += diffOctave;\n      difference -= diffOctave * 1200;\n    }\n\n    return new Note(noteName, accidental, octave, Math.toDecimalPlaces(difference, 2));\n  }\n\n  toString() {\n    let output = this.name + this.accidental + this.octave;\n    if (!Math.isEqual(this.difference, 0)) {\n      output += ' ' + (this.difference > 0 ? '+' : '') + this.difference + '¢';\n    }\n\n    return output;\n  }\n\n  get cents() {\n    return nameCents[this.name] +\n      accidentalCents[this.accidental] +\n      ((this.octave - 4) * 1200) +\n      this.difference;\n  }\n\n  getFrequency(a4 = 440) {\n    return Cents.centsToFrequency(this.cents - 900, a4);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Note.js","export default class InstrumentString {\n  constructor(stringNumber, frequency, physicalLength = 500) {\n    this.number = stringNumber;\n    this.frequency = frequency;\n    this.physicalLength = physicalLength;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/InstrumentString.js","import Harmonic from './Harmonic';\nimport HarmonicCalculator from './HarmonicCalculator';\nimport Instrument from './Instrument';\nimport InstrumentString from './InstrumentString';\nimport Note, { ACCIDENTALS } from './Note';\n\nNote.ACCIDENTALS = ACCIDENTALS;\n\nexport {\n  Harmonic,\n  HarmonicCalculator,\n  Instrument,\n  InstrumentString,\n  Note\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import Cents from './Cents';\nimport Harmonic from './Harmonic';\nimport Math from './Math';\n\nfunction getPhysicalDistanceBetweenStops(harmonic, physicalStringLength) {\n  return (harmonic.baseStop - harmonic.halfStop) * physicalStringLength;\n}\n\nfunction getBowedDistance(harmonic, physicalStringLength) {\n  return harmonic.halfStop * physicalStringLength;\n}\n\nexport default class HarmonicCalculator {\n\n  constructor({\n                minStopDistance = 1,\n                maxStopDistance = 120,\n                minBowedDistance = 20,\n                maxSoundingNoteDifference = 50\n  } = {}) {\n    this.minStopDistance = minStopDistance;\n    this.maxStopDistance = maxStopDistance;\n    this.minBowedDistance = minBowedDistance;\n    this.maxSoundingNoteDifference = maxSoundingNoteDifference;\n  }\n\n  findArtificialHarmonics(soundingNote, stringFrequency) {\n    let harmonics = [];\n    const soundingNoteFrequency = soundingNote.getFrequency();\n    for (let number = 6; number >= 2; number--) {\n      const fundamental = soundingNoteFrequency / number;\n      if (Math.isGreaterThan(fundamental, stringFrequency)) {\n        const baseStop = Cents.frequencyToStringLength(fundamental, stringFrequency),\n          halfStop = (number - 1) / number * baseStop;\n\n        harmonics.push(new Harmonic(halfStop, baseStop, stringFrequency));\n      }\n    }\n\n    return harmonics;\n  }\n\n  findNaturalHarmonics(soundingNote, stringFrequency) {\n    let harmonics = [];\n    for (let number = 1; number <= 16; number++) {\n      let harmonicsForNumber = this.findNaturalHarmonicsForNumber(number, stringFrequency);\n      harmonics.push(...harmonicsForNumber.filter(harmonic => {\n        const difference = Math.abs(Cents.frequencyToCents(harmonic.frequency) - soundingNote.cents);\n\n        return difference <= this.maxSoundingNoteDifference;\n      }));\n    }\n\n    return harmonics;\n  }\n\n  findNaturalHarmonicsForNumber(number, stringFrequency) {\n    let harmonics = [];\n    for (const stringLength of Harmonic.getStringLengthsFromNumber(number, true)) {\n      harmonics.push(new Harmonic(stringLength, 1, stringFrequency));\n    }\n\n    return harmonics;\n  }\n\n  validatePhysicalDistance(harmonic, physicalStringLength) {\n    if (!harmonic.isNatural) {\n      const distance = getPhysicalDistanceBetweenStops(harmonic, physicalStringLength);\n\n      if (distance < this.minStopDistance || distance > this.maxStopDistance) {\n        return false;\n      }\n    }\n\n    return getBowedDistance(harmonic, physicalStringLength) >= this.minBowedDistance;\n  }\n\n  findHarmonics(soundingNote, instrumentString) {\n    let harmonics = [];\n    harmonics.push(\n      ...this.findNaturalHarmonics(soundingNote, instrumentString.frequency),\n      ...this.findArtificialHarmonics(soundingNote, instrumentString.frequency)\n    );\n    harmonics = harmonics.filter(\n      (harmonic) => this.validatePhysicalDistance(harmonic, instrumentString.physicalLength)\n    );\n\n    return harmonics;\n  }\n\n  findHarmonicsForInstrument(soundingNote, instrument) {\n    let harmonics = [];\n    for (let instrumentString of instrument.strings) {\n      harmonics.push(...this.findHarmonics(soundingNote, instrumentString));\n    }\n\n    return harmonics;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/HarmonicCalculator.js","import Note from './Note';\nimport { InvalidArgumentError } from './errors';\nimport InstrumentString from './InstrumentString';\n\nexport const presets = {\n  'violin': {\n    'names': ['E5', 'A4', 'D4', 'G3'],\n    'length': 325,\n    'clef': 'treble'\n  },\n  'viola': {\n    'names': ['A4', 'D4', 'G3', 'C3'],\n    'length': 410,\n    'clef': 'alto'\n  },\n  'cello': {\n    'names': ['A3', 'D3', 'G2', 'C2'],\n    'length': 690,\n    'clef': 'bass'\n  },\n  'double bass': {\n    'names': ['G2', 'D2', 'A1', 'E1'],\n    'length': 1140,\n    'clef': 'bass'\n  },\n  'guitar': {\n    'names': ['E4', 'B3', 'G3', 'D3', 'A2', 'E2'],\n    'length': 650,\n    'clef': 'bass'\n  }\n};\n\nexport default class Instrument {\n  constructor(stringFrequencies = [], stringLength = 500, clef = 'treble') {\n    const stringNames = ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X'];\n    this.strings = [];\n    for (const index in stringFrequencies) {\n      this.strings.push(new InstrumentString(stringNames[index], stringFrequencies[index], stringLength));\n    }\n    this.clef = clef;\n  }\n\n  static fromNames(stringNames, length = 500, clef) {\n    let strings = [];\n    for (const name of stringNames) {\n      strings.push(Note.fromName(name).getFrequency());\n    }\n\n    return new this(strings, length, clef);\n  }\n\n  static fromPreset(preset) {\n    if (presets[preset] === undefined) {\n      throw new InvalidArgumentError(`Preset not found: ${preset}`);\n    }\n\n    return this.fromNames(presets[preset].names, presets[preset].length, presets[preset].clef);\n  }\n\n  getString(number) {\n    for (const string of this.strings) {\n      if (string.number === number) {\n        return string;\n      }\n    }\n\n    throw new InvalidArgumentError(`String not found: ${number}`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Instrument.js"],"sourceRoot":""}