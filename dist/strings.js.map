{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 1d28b5d27adb0e65536f","webpack:///./src/Cents.js","webpack:///./src/index.js","webpack:///./src/Harmonic.js","webpack:///./src/Math.js","webpack:///./src/HarmonicCalculator.js","webpack:///./src/Instrument.js","webpack:///./src/Note.js"],"names":["Cents","lower","upper","Math","isEqual","log","frequency","a4","frequenciesToCents","cents","base","pow","stringFrequency","Error","centsOverString","centsToStringLength","Harmonic","HarmonicCalculator","Instrument","Note","halfStop","baseStop","number","round","gcd","Object","defineProperty","value","writable","getSoundingFrequency","stringLength","centsToFrequency","exclusive","harmonics","numerator","push","limit","series","denominator","EPSILON","a","b","abs","isGreaterThan","getPhysicalDistanceBetweenStops","harmonic","instrument","getBowedDistance","minStopDistance","maxStopDistance","minBowedDistance","maxSoundingNoteDifference","soundingNote","soundingNoteFrequency","getFrequency","fundamental","frequencyToStringLength","candidateFrequency","difference","frequencyToCents","getStringLengthsFromNumber","isNatural","distance","stringFrequencies","findArtificialHarmonics","findNaturalHarmonics","filter","validatePhysicalDistance","presets","stringNames","length","strings","name","fromName","preset","undefined","fromNames","names","ACCIDENTAL_NATURAL","ACCIDENTAL_SHARP","ACCIDENTAL_FLAT","ACCIDENTAL_DOUBLE_SHARP","ACCIDENTAL_DOUBLE_FLAT","ACCIDENTAL_QUARTER_SHARP","ACCIDENTAL_QUARTER_FLAT","ACCIDENTAL_THREE_QUARTER_SHARP","ACCIDENTAL_THREE_QUARTER_FLAT","PATTERN_ACCIDENTAL_SHARP","PATTERN_ACCIDENTAL_FLAT","PATTERN_ACCIDENTAL_QUARTER","PATTERN_ACCIDENTAL_3_QUARTER","ACCIDENTAL_PATTERNS","normalizeAccidental","accidental","trim","pattern","replacement","RegExp","test","accidentalCents","nameCents","defaultPreferredAccidentals","octave","output","preferredAccidentals","rounded","floor","centsWithoutOctave","keys","noteName","find","key","fromCents","rest","matches","match","toUpperCase","substr","parseInt"],"mappings":"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","file":"strings.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"strings\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"strings\"] = factory();\n\telse\n\t\troot[\"strings\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1d28b5d27adb0e65536f","export default class Cents {\n  static frequenciesToCents(lower, upper) {\n    return Math.isEqual(lower, 0) ? 0 : 1200 * (Math.log(upper / lower) / Math.log(2));\n  }\n\n  static frequencyToCents(frequency, a4 = 440) {\n    return Cents.frequenciesToCents(a4, frequency) + 900;\n  }\n\n  static centsToFrequency(cents, base) {\n    return base * Math.pow(2, cents / 1200);\n  }\n\n  static centsToStringLength(cents) {\n    return 1 / Math.pow(2, cents / 1200);\n  }\n\n  static frequencyToStringLength(frequency, stringFrequency) {\n    if (Math.isEqual(frequency, 0)) {\n      throw new Error(`Invalid frequency: ${frequency}`);\n    }\n    const centsOverString = this.frequenciesToCents(stringFrequency, frequency);\n\n    return this.centsToStringLength(centsOverString);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Cents.js","import Harmonic from './Harmonic';\nimport HarmonicCalculator from './HarmonicCalculator';\nimport Instrument from './Instrument';\nimport Note from './Note';\nexport { Harmonic, HarmonicCalculator, Instrument, Note };\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import Cents from './Cents';\nimport Math from './Math';\n\nexport default class Harmonic {\n  constructor(halfStop, baseStop, stringFrequency) {\n    if (halfStop > baseStop) {\n      throw new Error('The half-stop cannot be lower than the base stop.');\n    }\n\n    this.halfStop = halfStop;\n    this.baseStop = baseStop;\n    this.stringFrequency = stringFrequency;\n  }\n\n  get number() {\n    const number = Math.round(1 / Math.gcd(1, this.halfStop / this.baseStop));\n    Object.defineProperty(this, 'number', {value: number, writable: false});\n\n    return number;\n  }\n\n  get isNatural() {\n    return Math.isEqual(this.baseStop, 1);\n  }\n\n  get frequency() {\n    const frequency = Harmonic.getSoundingFrequency(this.number, this.baseStop, this.stringFrequency);\n    Object.defineProperty(this, 'frequency', {value: frequency, writable: false});\n\n    return frequency;\n  }\n\n  static getSoundingFrequency(number, stringLength, stringFrequency) {\n    const centsOverString = Cents.frequenciesToCents(stringLength, 1);\n\n    return Cents.centsToFrequency(centsOverString, stringFrequency) * number;\n  }\n\n  static getStringLengthsFromNumber(number, exclusive = false) {\n    let harmonics = [];\n    for (let numerator = 1; numerator <= number; numerator++) {\n      if (!exclusive || numerator === 1 || Math.isEqual(Math.gcd(numerator, number), 1)) {\n        harmonics.push(numerator / number);\n      }\n    }\n\n    return harmonics;\n  }\n\n  static getSeries(limit) {\n    let series = [];\n    let base = 0;\n    for (let denominator = 1; denominator <= limit; denominator++) {\n      base = series[denominator] = base + 1 / denominator;\n    }\n\n    return series;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Harmonic.js","const EPSILON = Math.pow(2, -32);\n\nMath.isEqual = function (a, b) {\n  return Math.abs(a - b) < EPSILON;\n};\n\nMath.isGreaterThan = function (a, b) {\n  return a > b && a - b > EPSILON;\n};\n\nMath.gcd = function (a, b) {\n  return this.isEqual(b, 0) ? a : this.gcd(b, a % b);\n};\n\nexport default Math;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Math.js","import Cents from './Cents';\nimport Harmonic from './Harmonic';\nimport Math from './Math';\n\nfunction getPhysicalDistanceBetweenStops(harmonic, instrument) {\n  return (harmonic.baseStop - harmonic.halfStop) * instrument.stringLength;\n}\n\nfunction getBowedDistance(harmonic, instrument) {\n  return harmonic.halfStop * instrument.stringLength;\n}\n\nexport default class HarmonicCalculator {\n\n  constructor({\n                minStopDistance = 1,\n                maxStopDistance = 120,\n                minBowedDistance = 20,\n                maxSoundingNoteDifference = 50\n  } = {}) {\n    this.minStopDistance = minStopDistance;\n    this.maxStopDistance = maxStopDistance;\n    this.minBowedDistance = minBowedDistance;\n    this.maxSoundingNoteDifference = maxSoundingNoteDifference;\n  }\n\n  findArtificialHarmonics(soundingNote, stringFrequency) {\n    let harmonics = [];\n    const soundingNoteFrequency = soundingNote.getFrequency();\n    for (let number = 6; number >= 2; number--) {\n      const fundamental = soundingNoteFrequency / number;\n      if (Math.isGreaterThan(fundamental, stringFrequency)) {\n        const baseStop = Cents.frequencyToStringLength(fundamental, stringFrequency),\n          halfStop = (number - 1) / number * baseStop;\n\n        harmonics.push(new Harmonic(halfStop, baseStop, stringFrequency));\n      }\n    }\n\n    return harmonics;\n  }\n\n  findNaturalHarmonics(soundingNote, stringFrequency) {\n    let harmonics = [];\n    for (let number = 1; number <= 8; number++) {\n      // Convert harmonic number to the sounding frequency.\n      const candidateFrequency = Harmonic.getSoundingFrequency(1, 1 / number, stringFrequency);\n\n      // Calculate the difference in cents between the natural harmonic\n      // frequency and the desired sounding note.\n      const difference = Math.abs(Cents.frequencyToCents(candidateFrequency) - soundingNote.cents);\n\n      if (difference <= this.maxSoundingNoteDifference) {\n        for (const stringLength of Harmonic.getStringLengthsFromNumber(number, true)) {\n          harmonics.push(new Harmonic(stringLength, 1, stringFrequency));\n        }\n      }\n    }\n\n    return harmonics;\n  }\n\n  validatePhysicalDistance(harmonic, instrument) {\n    if (!harmonic.isNatural) {\n      const distance = getPhysicalDistanceBetweenStops(harmonic, instrument);\n\n      if (distance < this.minStopDistance || distance > this.maxStopDistance) {\n        return false;\n      }\n    }\n\n    return getBowedDistance(harmonic, instrument) >= this.minBowedDistance;\n  }\n\n  findHarmonics(soundingNote, instrument) {\n    let harmonics = [];\n    for (const stringFrequency of instrument.stringFrequencies) {\n      harmonics.push(\n        ...this.findArtificialHarmonics(soundingNote, stringFrequency),\n        ...this.findNaturalHarmonics(soundingNote, stringFrequency)\n      );\n    }\n\n    harmonics = harmonics.filter((harmonic) => this.validatePhysicalDistance(harmonic, instrument));\n\n    return harmonics;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/HarmonicCalculator.js","import { Note } from './index';\n\nexport const presets = {\n  'violin': {\n    'names': ['E5', 'A4', 'D4', 'G3'],\n    'length': 325\n  },\n  'viola': {\n    'names': ['A4', 'D4', 'G3', 'C3'],\n    'length': 410\n  },\n  'cello': {\n    'names': ['A3', 'D3', 'G2', 'C2'],\n    'length': 690\n  },\n  'double bass': {\n    'names': ['G2', 'D2', 'A1', 'E1'],\n    'length': 1140\n  }\n};\n\nexport default class Instrument {\n  constructor(stringFrequencies = [], stringLength = 500) {\n    this.stringFrequencies = stringFrequencies;\n    this.stringLength = stringLength;\n  }\n\n  static fromNames(stringNames, length = 500) {\n    let strings = [];\n    for (const name of stringNames) {\n      strings.push(Note.fromName(name).getFrequency());\n    }\n\n    return new this(strings, length);\n  }\n\n  static fromPreset(preset) {\n    if (presets[preset] === undefined) {\n      throw new Error(`Preset not found: ${preset}`);\n    }\n\n    return this.fromNames(presets[preset].names, presets[preset].length);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Instrument.js","import Cents from './Cents';\n\nconst ACCIDENTAL_NATURAL = '';\nconst ACCIDENTAL_SHARP = '♯';\nconst ACCIDENTAL_FLAT = '♭';\nconst ACCIDENTAL_DOUBLE_SHARP = 'x';\nconst ACCIDENTAL_DOUBLE_FLAT = '♭♭';\nconst ACCIDENTAL_QUARTER_SHARP = '¼♯';\nconst ACCIDENTAL_QUARTER_FLAT = '¼♭';\nconst ACCIDENTAL_THREE_QUARTER_SHARP = '¾♯';\nconst ACCIDENTAL_THREE_QUARTER_FLAT = '¾♭';\n\nconst PATTERN_ACCIDENTAL_SHARP = '([♯s#]|sharp)';\nconst PATTERN_ACCIDENTAL_FLAT = '([♭fb]|flat)';\nconst PATTERN_ACCIDENTAL_QUARTER = '(quarter|¼|1/4)[ -]?';\nconst PATTERN_ACCIDENTAL_3_QUARTER = '((three|3)[ -]quarter|¾|3/4)[ -]?';\n\nconst ACCIDENTAL_PATTERNS = {\n  ['']: ACCIDENTAL_NATURAL,\n  [PATTERN_ACCIDENTAL_FLAT]: ACCIDENTAL_FLAT,\n  [PATTERN_ACCIDENTAL_SHARP]: ACCIDENTAL_SHARP,\n  ['(-|' + PATTERN_ACCIDENTAL_QUARTER + PATTERN_ACCIDENTAL_FLAT + ')']: ACCIDENTAL_QUARTER_FLAT,\n  ['(\\\\+|' + PATTERN_ACCIDENTAL_QUARTER + PATTERN_ACCIDENTAL_SHARP + ')']: ACCIDENTAL_QUARTER_SHARP,\n  ['(𝄫|bb|double[ -]' + PATTERN_ACCIDENTAL_FLAT + ')']: ACCIDENTAL_DOUBLE_FLAT,\n  ['(𝄪|♯♯|##|double[ -]' + PATTERN_ACCIDENTAL_SHARP + ')']: ACCIDENTAL_DOUBLE_SHARP,\n  [\n    '(' + PATTERN_ACCIDENTAL_FLAT + '-|' + PATTERN_ACCIDENTAL_3_QUARTER + PATTERN_ACCIDENTAL_FLAT + ')'\n  ]: ACCIDENTAL_THREE_QUARTER_FLAT,\n  [\n    '(' + PATTERN_ACCIDENTAL_SHARP + '\\\\+|' + PATTERN_ACCIDENTAL_3_QUARTER + PATTERN_ACCIDENTAL_SHARP + ')'\n  ]: ACCIDENTAL_THREE_QUARTER_SHARP\n};\n\nconst normalizeAccidental = function (accidental) {\n  accidental = accidental.trim();\n\n  for (const pattern in ACCIDENTAL_PATTERNS) {\n    const replacement = ACCIDENTAL_PATTERNS[pattern];\n    if (accidental === replacement || new RegExp('^' + pattern + '$', 'iu').test(accidental)) {\n      return replacement;\n    }\n  }\n\n  throw new Error(`Invalid accidental: ${accidental}`);\n};\n\nconst accidentalCents = {\n  [ACCIDENTAL_NATURAL]: 0,\n  [ACCIDENTAL_FLAT]: -100,\n  [ACCIDENTAL_SHARP]: -100,\n  [ACCIDENTAL_QUARTER_FLAT]: -50,\n  [ACCIDENTAL_QUARTER_SHARP]: 50,\n  [ACCIDENTAL_DOUBLE_FLAT]: -200,\n  [ACCIDENTAL_DOUBLE_SHARP]: 200,\n  [ACCIDENTAL_THREE_QUARTER_FLAT]: -150,\n  [ACCIDENTAL_THREE_QUARTER_SHARP]: 150\n};\n\nconst nameCents = {\n  'C': 0,\n  'D': 200,\n  'E': 400,\n  'F': 500,\n  'G': 700,\n  'A': 900,\n  'B': 1100\n};\n\nconst defaultPreferredAccidentals = [\n  ACCIDENTAL_NATURAL,\n  ACCIDENTAL_SHARP,\n  ACCIDENTAL_FLAT,\n  ACCIDENTAL_QUARTER_SHARP,\n  ACCIDENTAL_QUARTER_FLAT,\n  ACCIDENTAL_DOUBLE_SHARP,\n  ACCIDENTAL_DOUBLE_FLAT,\n  ACCIDENTAL_THREE_QUARTER_FLAT,\n  ACCIDENTAL_THREE_QUARTER_SHARP\n];\n\nexport default class Note {\n  constructor(name, accidental = '', octave = 4, difference = 0) {\n    if (octave > 1000) {\n      throw new Error(`Invalid octave: ${octave}`);\n    }\n\n    this.name = name;\n    this.accidental = accidental;\n    this.octave = octave;\n    this.difference = difference;\n  }\n\n  static fromCents(cents, preferredAccidentals = []) {\n    const rounded = Math.round(cents / 50) * 50,\n      difference = Math.round((cents - rounded) * 100) / 100,\n      octave = Math.floor(rounded / 1200) + 4,\n      centsWithoutOctave = rounded - ((octave - 4) * 1200),\n      names = Object.keys(nameCents);\n\n    for (const accidental of [...preferredAccidentals, ...defaultPreferredAccidentals]) {\n      const cents = centsWithoutOctave - accidentalCents[accidental],\n        noteName = names.find(key => nameCents[key] === cents);\n      if (noteName !== undefined) {\n        return new Note(noteName, accidental, octave, difference);\n      }\n    }\n\n    throw new Error(`Failed to find note name for cents: ${cents}`);\n  }\n\n  static fromFrequency(frequency, a4 = 440, preferredAccidentals = []) {\n    return Note.fromCents(Cents.frequencyToCents(frequency, a4), preferredAccidentals);\n  }\n\n  static fromName(name) {\n    let rest = name;\n    let matches = rest.match(/^[a-g]/i);\n    if (matches === null) {\n      throw new Error(`Invalid note name: ${name}`);\n    }\n    const noteName = matches[0].toUpperCase();\n    rest = name.substr(matches[0].length);\n    if (rest.match(/^\\-[0-9]+$/i)) {\n      throw new Error(`Ambiguous note: ${name} (does \"-\" mean a quarter-flat or a negative?)`);\n    }\n    matches = rest.match(new RegExp('\\/? *(\\-?[0-9]+)?( +([\\+-][0-9]+(\\.[0-9]+)?) *[c¢])?$', 'iu'));\n    const octave = matches[1] !== undefined ? parseInt(matches[1], 10) : 4;\n    const difference = matches[3] !== undefined ? Math.round(matches[3] * 100) / 100 : 0;\n    rest = rest.substr(0, rest.length - matches[0].length);\n    const accidental = normalizeAccidental(rest);\n\n    return new Note(noteName, accidental, octave, difference);\n  }\n\n  toString() {\n    let output = this.name + this.accidental + this.octave;\n    if (!Math.isEqual(this.difference, 0)) {\n      output += ' ' + (this.difference > 0 ? '+' : '') + this.difference + '¢';\n    }\n\n    return output;\n  }\n\n  get cents() {\n    return nameCents[this.name] +\n      accidentalCents[this.accidental] +\n      ((this.octave - 4) * 1200) +\n      this.difference;\n  }\n\n  getFrequency(a4 = 440) {\n    return Cents.centsToFrequency(this.cents - 900, a4);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Note.js"],"sourceRoot":""}