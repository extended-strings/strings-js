{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 12791f6c4ac5afa5c2b3","webpack:///./src/errors.js","webpack:///./src/Cents.js","webpack:///./src/index.js","webpack:///./src/Harmonic.js","webpack:///./src/Math.js","webpack:///./src/HarmonicCalculator.js","webpack:///./src/Instrument.js","webpack:///./src/Note.js"],"names":["CustomError","message","constructor","name","stack","Error","prototype","Object","create","InvalidArgumentError","RuntimeError","Cents","lower","upper","Math","isEqual","log","frequency","a4","frequenciesToCents","cents","base","pow","stringFrequency","centsOverString","centsToStringLength","ACCIDENTALS","Harmonic","HarmonicCalculator","Instrument","Note","halfStop","baseStop","number","round","gcd","defineProperty","value","writable","getSoundingFrequency","stringLength","centsToFrequency","exclusive","harmonics","numerator","push","EPSILON","a","b","abs","isGreaterThan","toNearest","nearest","toDecimalPlaces","dp","multiplier","getPhysicalDistanceBetweenStops","harmonic","instrument","getBowedDistance","minStopDistance","maxStopDistance","minBowedDistance","maxSoundingNoteDifference","soundingNote","soundingNoteFrequency","getFrequency","fundamental","frequencyToStringLength","candidateFrequency","difference","frequencyToCents","getStringLengthsFromNumber","isNatural","distance","stringFrequencies","findNaturalHarmonics","findArtificialHarmonics","filter","validatePhysicalDistance","presets","stringNames","length","strings","fromName","preset","undefined","fromNames","names","none","natural","sharp","flat","doubleSharp","doubleFlat","quarterSharp","quarterFlat","threeQuarterSharp","threeQuarterFlat","PATTERN_NAME","RegExp","PATTERN_OCTAVE","PATTERN_DIFFERENCE","PATTERN_ACCIDENTAL_SHARP","PATTERN_ACCIDENTAL_FLAT","PATTERN_ACCIDENTAL_QUARTER","PATTERN_ACCIDENTAL_3_QUARTER","ACCIDENTAL_PATTERNS","normalizeAccidental","accidental","trim","replacement","test","accidentalCents","nameCents","defaultPreferredAccidentals","octave","output","preferredAccidentals","rounded","floor","centsWithoutOctave","keys","noteName","find","key","fromCents","rest","matches","match","toUpperCase","replace","spacesPattern","parseInt","e","diffOctave"],"mappings":"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","file":"strings.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"strings\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"strings\"] = factory();\n\telse\n\t\troot[\"strings\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 12791f6c4ac5afa5c2b3","class CustomError {\n  constructor(message) {\n    this.message = message || this.constructor.name;\n    this.stack = (new Error()).stack;\n  }\n}\nCustomError.prototype = Object.create(Error.prototype);\n\nclass InvalidArgumentError extends CustomError {}\n\nclass RuntimeError extends CustomError {}\n\nexport { InvalidArgumentError, RuntimeError };\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/errors.js","import { InvalidArgumentError } from './errors';\n\nexport default class Cents {\n  static frequenciesToCents(lower, upper) {\n    return Math.isEqual(lower, 0) ? 0 : 1200 * (Math.log(upper / lower) / Math.log(2));\n  }\n\n  static frequencyToCents(frequency, a4 = 440) {\n    return Cents.frequenciesToCents(a4, frequency) + 900;\n  }\n\n  static centsToFrequency(cents, base) {\n    return base * Math.pow(2, cents / 1200);\n  }\n\n  static centsToStringLength(cents) {\n    return 1 / Math.pow(2, cents / 1200);\n  }\n\n  static frequencyToStringLength(frequency, stringFrequency) {\n    if (Math.isEqual(frequency, 0)) {\n      throw new InvalidArgumentError(`Invalid (zero) frequency: ${frequency}`);\n    }\n    const centsOverString = this.frequenciesToCents(stringFrequency, frequency);\n\n    return this.centsToStringLength(centsOverString);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Cents.js","import Harmonic from './Harmonic';\nimport HarmonicCalculator from './HarmonicCalculator';\nimport Instrument from './Instrument';\nimport Note, { ACCIDENTALS } from './Note';\n\nNote.ACCIDENTALS = ACCIDENTALS;\n\nexport { Harmonic, HarmonicCalculator, Instrument, Note };\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import Cents from './Cents';\nimport Math from './Math';\nimport { InvalidArgumentError } from './errors';\n\nexport default class Harmonic {\n  constructor(halfStop, baseStop, stringFrequency) {\n    if (halfStop > baseStop) {\n      throw new InvalidArgumentError('The half-stop cannot be lower than the base stop.');\n    }\n\n    this.halfStop = halfStop;\n    this.baseStop = baseStop;\n    this.stringFrequency = stringFrequency;\n  }\n\n  get number() {\n    const number = Math.round(1 / Math.gcd(1, this.halfStop / this.baseStop));\n    Object.defineProperty(this, 'number', {value: number, writable: false});\n\n    return number;\n  }\n\n  get isNatural() {\n    return Math.isEqual(this.baseStop, 1);\n  }\n\n  get isOpenString() {\n    return Math.isEqual(this.halfStop, 1) && Math.isEqual(this.baseStop, 1);\n  }\n\n  get frequency() {\n    const frequency = Harmonic.getSoundingFrequency(this.number, this.baseStop, this.stringFrequency);\n    Object.defineProperty(this, 'frequency', {value: frequency, writable: false});\n\n    return frequency;\n  }\n\n  static getSoundingFrequency(number, stringLength, stringFrequency) {\n    const centsOverString = Cents.frequenciesToCents(stringLength, 1);\n\n    return Cents.centsToFrequency(centsOverString, stringFrequency) * number;\n  }\n\n  static getStringLengthsFromNumber(number, exclusive = false) {\n    let harmonics = [];\n    for (let numerator = 1; numerator <= number; numerator++) {\n      if (!exclusive || numerator === 1 || Math.isEqual(Math.gcd(numerator, number), 1)) {\n        harmonics.push(numerator / number);\n      }\n    }\n\n    return harmonics;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Harmonic.js","const EPSILON = Math.pow(2, -32);\n\nMath.isEqual = function (a, b) {\n  return Math.abs(a - b) < EPSILON;\n};\n\nMath.isGreaterThan = function (a, b) {\n  return a > b && a - b > EPSILON;\n};\n\nMath.gcd = function (a, b) {\n  return this.isEqual(b, 0) ? a : this.gcd(b, a % b);\n};\n\nMath.toNearest = function (number, nearest = 1) {\n  return Math.round(number / nearest) * nearest;\n};\n\nMath.toDecimalPlaces = function (number, dp = 0) {\n  if (dp === 0) {\n    return Math.round(number);\n  }\n  const multiplier = this.pow(10, dp);\n\n  return Math.round(number * multiplier) / multiplier;\n};\n\nexport default Math;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Math.js","import Cents from './Cents';\nimport Harmonic from './Harmonic';\nimport Math from './Math';\n\nfunction getPhysicalDistanceBetweenStops(harmonic, instrument) {\n  return (harmonic.baseStop - harmonic.halfStop) * instrument.stringLength;\n}\n\nfunction getBowedDistance(harmonic, instrument) {\n  return harmonic.halfStop * instrument.stringLength;\n}\n\nexport default class HarmonicCalculator {\n\n  constructor({\n                minStopDistance = 1,\n                maxStopDistance = 120,\n                minBowedDistance = 20,\n                maxSoundingNoteDifference = 50\n  } = {}) {\n    this.minStopDistance = minStopDistance;\n    this.maxStopDistance = maxStopDistance;\n    this.minBowedDistance = minBowedDistance;\n    this.maxSoundingNoteDifference = maxSoundingNoteDifference;\n  }\n\n  findArtificialHarmonics(soundingNote, stringFrequency) {\n    let harmonics = [];\n    const soundingNoteFrequency = soundingNote.getFrequency();\n    for (let number = 2; number <= 6; number++) {\n      const fundamental = soundingNoteFrequency / number;\n      if (Math.isGreaterThan(fundamental, stringFrequency)) {\n        const baseStop = Cents.frequencyToStringLength(fundamental, stringFrequency),\n          halfStop = (number - 1) / number * baseStop;\n\n        harmonics.push(new Harmonic(halfStop, baseStop, stringFrequency));\n      }\n    }\n\n    return harmonics;\n  }\n\n  findNaturalHarmonics(soundingNote, stringFrequency) {\n    let harmonics = [];\n    for (let number = 1; number <= 8; number++) {\n      // Convert harmonic number to the sounding frequency.\n      const candidateFrequency = Harmonic.getSoundingFrequency(1, 1 / number, stringFrequency);\n\n      // Calculate the difference in cents between the natural harmonic\n      // frequency and the desired sounding note.\n      const difference = Math.abs(Cents.frequencyToCents(candidateFrequency) - soundingNote.cents);\n\n      if (difference <= this.maxSoundingNoteDifference) {\n        for (const stringLength of Harmonic.getStringLengthsFromNumber(number, true)) {\n          harmonics.push(new Harmonic(stringLength, 1, stringFrequency));\n        }\n      }\n    }\n\n    return harmonics;\n  }\n\n  validatePhysicalDistance(harmonic, instrument) {\n    if (!harmonic.isNatural) {\n      const distance = getPhysicalDistanceBetweenStops(harmonic, instrument);\n\n      if (distance < this.minStopDistance || distance > this.maxStopDistance) {\n        return false;\n      }\n    }\n\n    return getBowedDistance(harmonic, instrument) >= this.minBowedDistance;\n  }\n\n  findHarmonics(soundingNote, instrument) {\n    let harmonics = [];\n    for (const stringFrequency of instrument.stringFrequencies) {\n      harmonics.push(\n        ...this.findNaturalHarmonics(soundingNote, stringFrequency),\n        ...this.findArtificialHarmonics(soundingNote, stringFrequency)\n      );\n    }\n\n    harmonics = harmonics.filter((harmonic) => this.validatePhysicalDistance(harmonic, instrument));\n\n    return harmonics;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/HarmonicCalculator.js","import { Note } from './index';\nimport { InvalidArgumentError } from './errors';\n\nexport const presets = {\n  'violin': {\n    'names': ['E5', 'A4', 'D4', 'G3'],\n    'length': 325\n  },\n  'viola': {\n    'names': ['A4', 'D4', 'G3', 'C3'],\n    'length': 410\n  },\n  'cello': {\n    'names': ['A3', 'D3', 'G2', 'C2'],\n    'length': 690\n  },\n  'double bass': {\n    'names': ['G2', 'D2', 'A1', 'E1'],\n    'length': 1140\n  }\n};\n\nexport default class Instrument {\n  constructor(stringFrequencies = [], stringLength = 500) {\n    this.stringFrequencies = stringFrequencies;\n    this.stringLength = stringLength;\n  }\n\n  static fromNames(stringNames, length = 500) {\n    let strings = [];\n    for (const name of stringNames) {\n      strings.push(Note.fromName(name).getFrequency());\n    }\n\n    return new this(strings, length);\n  }\n\n  static fromPreset(preset) {\n    if (presets[preset] === undefined) {\n      throw new InvalidArgumentError(`Preset not found: ${preset}`);\n    }\n\n    return this.fromNames(presets[preset].names, presets[preset].length);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Instrument.js","import Cents from './Cents';\nimport { InvalidArgumentError, RuntimeError } from './errors';\n\nexport const ACCIDENTALS = {\n  none: '',\n  natural: '♮',\n  sharp: '♯',\n  flat: '♭',\n  doubleSharp: 'x',\n  doubleFlat: '♭♭',\n  quarterSharp: '¼♯',\n  quarterFlat: '¼♭',\n  threeQuarterSharp: '¾♯',\n  threeQuarterFlat: '¾♭'\n};\n\nconst PATTERN_NAME = new RegExp('^ *[a-g]', 'i');\nconst PATTERN_OCTAVE = new RegExp('[/ ]*([\\-]? *[0-9]+)\\\\b');\nconst PATTERN_DIFFERENCE = new RegExp('([+-]? *[0-9]+(\\.[0-9]+)?) *(c(ent)?s?|¢)', 'iu');\n\nconst PATTERN_ACCIDENTAL_SHARP = '([♯s#]|sh(arp)?)';\nconst PATTERN_ACCIDENTAL_FLAT = '([♭fb]|fl(at)?)';\nconst PATTERN_ACCIDENTAL_QUARTER = '(q|quarter|¼|1/4)[ -]?';\nconst PATTERN_ACCIDENTAL_3_QUARTER = '((three|3)[ -]q|quarter|¾|3/4)[ -]?';\n\nconst ACCIDENTAL_PATTERNS = {\n  [ACCIDENTALS.none]: '',\n  [ACCIDENTALS.natural]: '([♮n]|nat(ural)?)',\n  [ACCIDENTALS.flat]: PATTERN_ACCIDENTAL_FLAT,\n  [ACCIDENTALS.sharp]: PATTERN_ACCIDENTAL_SHARP,\n  [ACCIDENTALS.quarterFlat]: '(d|-|' + PATTERN_ACCIDENTAL_QUARTER + PATTERN_ACCIDENTAL_FLAT + ')',\n  [ACCIDENTALS.quarterSharp]: '(\\\\+|' + PATTERN_ACCIDENTAL_QUARTER + PATTERN_ACCIDENTAL_SHARP + ')',\n  [ACCIDENTALS.doubleFlat]: '(𝄫|bb|double[ -]' + PATTERN_ACCIDENTAL_FLAT + ')',\n  [ACCIDENTALS.doubleSharp]: '(𝄪|♯♯|##|double[ -]' + PATTERN_ACCIDENTAL_SHARP + ')',\n  [ACCIDENTALS.threeQuarterFlat]:\n    '(db|' + PATTERN_ACCIDENTAL_FLAT + '-|' + PATTERN_ACCIDENTAL_3_QUARTER + PATTERN_ACCIDENTAL_FLAT + ')',\n  [ACCIDENTALS.threeQuarterSharp]:\n    '(\\\\+\\\\+|' + PATTERN_ACCIDENTAL_SHARP + '\\\\+|' + PATTERN_ACCIDENTAL_3_QUARTER + PATTERN_ACCIDENTAL_SHARP + ')'\n};\n\nconst normalizeAccidental = function (accidental) {\n  accidental = accidental.trim();\n\n  for (const replacement in ACCIDENTAL_PATTERNS) {\n    if (accidental === replacement ||\n      new RegExp('^' + ACCIDENTAL_PATTERNS[replacement] + '$', 'iu').test(accidental)) {\n      return replacement;\n    }\n  }\n\n  throw new InvalidArgumentError(`Invalid accidental: \"${accidental}\"`);\n};\n\nconst accidentalCents = {\n  [ACCIDENTALS.none]: 0,\n  [ACCIDENTALS.natural]: 0,\n  [ACCIDENTALS.flat]: -100,\n  [ACCIDENTALS.sharp]: 100,\n  [ACCIDENTALS.quarterFlat]: -50,\n  [ACCIDENTALS.quarterSharp]: 50,\n  [ACCIDENTALS.doubleFlat]: -200,\n  [ACCIDENTALS.doubleSharp]: 200,\n  [ACCIDENTALS.threeQuarterFlat]: -150,\n  [ACCIDENTALS.threeQuarterSharp]: 150\n};\n\nconst nameCents = {\n  'C': 0,\n  'D': 200,\n  'E': 400,\n  'F': 500,\n  'G': 700,\n  'A': 900,\n  'B': 1100\n};\n\nconst defaultPreferredAccidentals = [\n  ACCIDENTALS.none,\n  ACCIDENTALS.natural,\n  ACCIDENTALS.sharp,\n  ACCIDENTALS.flat,\n  ACCIDENTALS.quarterSharp,\n  ACCIDENTALS.quarterFlat,\n  ACCIDENTALS.doubleSharp,\n  ACCIDENTALS.doubleFlat,\n  ACCIDENTALS.threeQuarterSharp,\n  ACCIDENTALS.threeQuarterFlat\n];\n\nexport default class Note {\n  constructor(name, accidental = '', octave = 4, difference = 0) {\n    if (octave > 1000) {\n      throw new InvalidArgumentError(`Invalid octave: ${octave}`);\n    }\n\n    this.name = name;\n    this.accidental = accidental;\n    this.octave = octave;\n    this.difference = difference;\n  }\n\n  static fromCents(cents, preferredAccidentals = []) {\n    const rounded = Math.toNearest(cents, 50),\n      difference = Math.toDecimalPlaces(cents - rounded, 2),\n      octave = Math.floor(rounded / 1200) + 4,\n      centsWithoutOctave = rounded - ((octave - 4) * 1200),\n      names = Object.keys(nameCents);\n\n    // If the preferredAccidentals contains only a natural, also prefer flats.\n    if (preferredAccidentals.length === 1 &&\n      (preferredAccidentals[0] === ACCIDENTALS.none || preferredAccidentals[0] === ACCIDENTALS.natural)) {\n      preferredAccidentals.push(ACCIDENTALS.flat, ACCIDENTALS.quarterFlat);\n    }\n\n    for (const accidental of [...preferredAccidentals, ...defaultPreferredAccidentals]) {\n      const cents = centsWithoutOctave - accidentalCents[accidental],\n        noteName = names.find(key => nameCents[key] === cents);\n      if (noteName !== undefined) {\n        return new Note(noteName, accidental, octave, difference);\n      }\n    }\n\n    throw new RuntimeError(`Failed to find note name for cents: ${cents}`);\n  }\n\n  static fromFrequency(frequency, a4 = 440, preferredAccidentals = []) {\n    return Note.fromCents(Cents.frequencyToCents(frequency, a4), preferredAccidentals);\n  }\n\n  static fromName(name, {octave = 4, accidental = ACCIDENTALS.none, difference = 0} = {}) {\n    let rest = name;\n\n    // Extract the note name (A-G).\n    let matches = rest.match(PATTERN_NAME);\n    if (matches === null) {\n      throw new InvalidArgumentError(`Invalid note: \"${name}\" (it should start with a letter, A-G)`);\n    }\n    const noteName = matches[0].toUpperCase();\n    rest = rest.replace(PATTERN_NAME, '').trim();\n\n    const spacesPattern = / +/;\n\n    // Extract the cents difference (e.g. +2c).\n    matches = rest.match(PATTERN_DIFFERENCE);\n    if (matches !== null) {\n      difference = matches[1].replace(spacesPattern, '');\n      rest = rest.replace(PATTERN_DIFFERENCE, '').trim();\n    }\n\n    // Extract the octave.\n    matches = rest.match(PATTERN_OCTAVE);\n    if (matches !== null) {\n      octave = parseInt(matches[1].replace(spacesPattern, ''), 10);\n      rest = rest.replace(PATTERN_OCTAVE, '').trim();\n    }\n\n    // The rest of the string (if any) is treated as the accidental.\n    accidental = rest || accidental;\n    try {\n      accidental = normalizeAccidental(accidental);\n    } catch (e) {\n      if (e instanceof InvalidArgumentError) {\n        throw new InvalidArgumentError(`Invalid note: \"${name}\" (unrecognised: \"${accidental}\")`);\n      }\n      throw e;\n    }\n\n    // Normalize the octave and cents difference.\n    if (difference >= 1200) {\n      const diffOctave = Math.round(difference / 1200);\n      octave += diffOctave;\n      difference -= diffOctave * 1200;\n    }\n\n    return new Note(noteName, accidental, octave, Math.toDecimalPlaces(difference, 2));\n  }\n\n  toString() {\n    let output = this.name + this.accidental + '/' + this.octave;\n    if (!Math.isEqual(this.difference, 0)) {\n      output += ' ' + (this.difference > 0 ? '+' : '') + this.difference + '¢';\n    }\n\n    return output;\n  }\n\n  get cents() {\n    return nameCents[this.name] +\n      accidentalCents[this.accidental] +\n      ((this.octave - 4) * 1200) +\n      this.difference;\n  }\n\n  getFrequency(a4 = 440) {\n    return Cents.centsToFrequency(this.cents - 900, a4);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Note.js"],"sourceRoot":""}