{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 8819a07566040ba456e1","webpack:///./src/Cents.js","webpack:///./src/index.js","webpack:///./src/Harmonic.js","webpack:///./src/Note.js","webpack:///./src/HarmonicCalculator.js","webpack:///./src/Instrument.js"],"names":["Cents","lower","upper","Math","log","frequency","a4","frequenciesToCents","cents","base","pow","stringFrequency","Error","centsOverString","centsToStringLength","Harmonic","HarmonicCalculator","Instrument","Note","gcd","a","b","halfStop","baseStop","parseFloat","number","round","Object","defineProperty","value","writable","getSoundingFrequency","stringLength","centsToFrequency","exclusive","harmonics","numerator","push","limit","series","denominator","ACCIDENTAL_NATURAL","ACCIDENTAL_SHARP","ACCIDENTAL_FLAT","ACCIDENTAL_DOUBLE_SHARP","ACCIDENTAL_DOUBLE_FLAT","ACCIDENTAL_QUARTER_SHARP","ACCIDENTAL_QUARTER_FLAT","ACCIDENTAL_THREE_QUARTER_SHARP","ACCIDENTAL_THREE_QUARTER_FLAT","PATTERN_ACCIDENTAL_SHARP","PATTERN_ACCIDENTAL_FLAT","PATTERN_ACCIDENTAL_QUARTER","PATTERN_ACCIDENTAL_3_QUARTER","ACCIDENTAL_PATTERNS","normalizeAccidental","accidental","trim","pattern","replacement","RegExp","test","accidentalCents","nameCents","defaultPreferredAccidentals","name","octave","difference","parseInt","output","differenceRounded","preferredAccidentals","rounded","floor","centsWithoutOctave","names","keys","noteName","find","key","undefined","fromCents","frequencyToCents","rest","matches","match","toUpperCase","substr","length","getPhysicalDistanceBetweenStops","harmonic","instrument","getBowedDistance","minStopDistance","maxStopDistance","minBowedDistance","maxSoundingNoteDifference","soundingNote","soundingNoteFrequency","getFrequency","fundamental","frequencyToStringLength","ratio","candidateFrequency","abs","getStringLengthsFromNumber","isNatural","distance","stringFrequencies","findArtificialHarmonics","findNaturalHarmonics","filter","validatePhysicalDistance","presets","stringNames","strings","fromName","preset","fromNames"],"mappings":"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","file":"strings.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"strings\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"strings\"] = factory();\n\telse\n\t\troot[\"strings\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8819a07566040ba456e1","export default class Cents {\n  static frequenciesToCents(lower, upper) {\n    return lower === 0 ? 0 : 1200 * (Math.log(upper / lower) / Math.log(2));\n  }\n\n  static frequencyToCents(frequency, a4 = 440.0) {\n    return Cents.frequenciesToCents(a4, frequency) + 900;\n  }\n\n  static centsToFrequency(cents, base) {\n    return base * Math.pow(2, cents / 1200);\n  }\n\n  static centsToStringLength(cents) {\n    return 1 / Math.pow(2, cents / 1200);\n  }\n\n  static frequencyToStringLength(frequency, stringFrequency) {\n    if (frequency === 0) {\n      throw new Error(`Invalid frequency: ${frequency}`);\n    }\n    const centsOverString = this.frequenciesToCents(stringFrequency, frequency);\n\n    return this.centsToStringLength(centsOverString);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Cents.js","import Harmonic from './Harmonic';\nimport HarmonicCalculator from './HarmonicCalculator';\nimport Instrument from './Instrument';\nimport Note from './Note';\nexport { Harmonic, HarmonicCalculator, Instrument, Note };\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import Cents from './Cents';\n\nfunction gcd(a, b) {\n  return b === 0 ? a : gcd(b, a % b);\n}\n\nexport default class Harmonic {\n  constructor(halfStop, baseStop, stringFrequency) {\n    if (halfStop > baseStop) {\n      throw new Error('The half-stop cannot be lower than the base stop.');\n    }\n\n    this.halfStop = parseFloat(halfStop);\n    this.baseStop = parseFloat(baseStop);\n    this.stringFrequency = stringFrequency;\n  }\n\n  get number() {\n    let number = Math.round(1 / gcd(1, this.halfStop / this.baseStop));\n    Object.defineProperty(this, 'number', {value: number, writable: false});\n\n    return number;\n  }\n\n  get isNatural() {\n    return this.baseStop === 1.0;\n  }\n\n  get frequency() {\n    return Harmonic.getSoundingFrequency(this.number, this.baseStop, this.stringFrequency);\n  }\n\n  static getSoundingFrequency(number, stringLength, stringFrequency) {\n    const centsOverString = Cents.frequenciesToCents(stringLength, 1);\n\n    return Cents.centsToFrequency(centsOverString, stringFrequency) * number;\n  }\n\n  static getStringLengthsFromNumber(number, exclusive = false) {\n    let harmonics = [];\n    for (let numerator = 1; numerator <= number; numerator++) {\n      if (!exclusive || numerator === 1 || gcd(numerator, number) === 1) {\n        harmonics.push(numerator / number);\n      }\n    }\n\n    return harmonics;\n  }\n\n  static getSeries(limit) {\n    let series = [];\n    let base = 0;\n    for (let denominator = 1; denominator <= limit; denominator++) {\n      base = series[denominator] = base + 1 / denominator;\n    }\n\n    return series;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Harmonic.js","import Cents from './Cents';\n\nconst ACCIDENTAL_NATURAL = '';\nconst ACCIDENTAL_SHARP = '♯';\nconst ACCIDENTAL_FLAT = '♭';\nconst ACCIDENTAL_DOUBLE_SHARP = 'x';\nconst ACCIDENTAL_DOUBLE_FLAT = '♭♭';\nconst ACCIDENTAL_QUARTER_SHARP = '¼♯';\nconst ACCIDENTAL_QUARTER_FLAT = '¼♭';\nconst ACCIDENTAL_THREE_QUARTER_SHARP = '¾♯';\nconst ACCIDENTAL_THREE_QUARTER_FLAT = '¾♭';\n\nconst PATTERN_ACCIDENTAL_SHARP = '([♯s#]|sharp)';\nconst PATTERN_ACCIDENTAL_FLAT = '([♭fb]|flat)';\nconst PATTERN_ACCIDENTAL_QUARTER = '(quarter|¼|1/4)[ -]?';\nconst PATTERN_ACCIDENTAL_3_QUARTER = '((three|3)[ -]quarter|¾|3/4)[ -]?';\n\nconst ACCIDENTAL_PATTERNS = {\n  ['']: ACCIDENTAL_NATURAL,\n  [PATTERN_ACCIDENTAL_FLAT]: ACCIDENTAL_FLAT,\n  [PATTERN_ACCIDENTAL_SHARP]: ACCIDENTAL_SHARP,\n  ['(-|' + PATTERN_ACCIDENTAL_QUARTER + PATTERN_ACCIDENTAL_FLAT + ')']: ACCIDENTAL_QUARTER_FLAT,\n  ['(\\\\+|' + PATTERN_ACCIDENTAL_QUARTER + PATTERN_ACCIDENTAL_SHARP + ')']: ACCIDENTAL_QUARTER_SHARP,\n  ['(𝄫|bb|double[ -]' + PATTERN_ACCIDENTAL_FLAT + ')']: ACCIDENTAL_DOUBLE_FLAT,\n  ['(𝄪|♯♯|##|double[ -]' + PATTERN_ACCIDENTAL_SHARP + ')']: ACCIDENTAL_DOUBLE_SHARP,\n  [\n    '(' + PATTERN_ACCIDENTAL_FLAT + '-|' + PATTERN_ACCIDENTAL_3_QUARTER + PATTERN_ACCIDENTAL_FLAT + ')'\n  ]: ACCIDENTAL_THREE_QUARTER_FLAT,\n  [\n    '(' + PATTERN_ACCIDENTAL_SHARP + '\\\\+|' + PATTERN_ACCIDENTAL_3_QUARTER + PATTERN_ACCIDENTAL_SHARP + ')'\n  ]: ACCIDENTAL_THREE_QUARTER_SHARP\n};\n\nconst normalizeAccidental = function (accidental) {\n  accidental = accidental.trim();\n\n  for (const pattern in ACCIDENTAL_PATTERNS) {\n    const replacement = ACCIDENTAL_PATTERNS[pattern];\n    if (accidental === replacement || new RegExp('^' + pattern + '$', 'iu').test(accidental)) {\n      return replacement;\n    }\n  }\n\n  throw new Error(`Invalid accidental: ${accidental}`);\n};\n\nconst accidentalCents = {\n  [ACCIDENTAL_NATURAL]: 0,\n  [ACCIDENTAL_FLAT]: -100,\n  [ACCIDENTAL_SHARP]: -100,\n  [ACCIDENTAL_QUARTER_FLAT]: -50,\n  [ACCIDENTAL_QUARTER_SHARP]: 50,\n  [ACCIDENTAL_DOUBLE_FLAT]: -200,\n  [ACCIDENTAL_DOUBLE_SHARP]: 200,\n  [ACCIDENTAL_THREE_QUARTER_FLAT]: -150,\n  [ACCIDENTAL_THREE_QUARTER_SHARP]: 150\n};\n\nconst nameCents = {\n  'C': 0,\n  'D': 200,\n  'E': 400,\n  'F': 500,\n  'G': 700,\n  'A': 900,\n  'B': 1100\n};\n\nconst defaultPreferredAccidentals = [\n  ACCIDENTAL_NATURAL,\n  ACCIDENTAL_SHARP,\n  ACCIDENTAL_FLAT,\n  ACCIDENTAL_QUARTER_SHARP,\n  ACCIDENTAL_QUARTER_FLAT,\n  ACCIDENTAL_DOUBLE_SHARP,\n  ACCIDENTAL_DOUBLE_FLAT,\n  ACCIDENTAL_THREE_QUARTER_FLAT,\n  ACCIDENTAL_THREE_QUARTER_SHARP\n];\n\nexport default class Note {\n  constructor(name, accidental = '', octave = 4, difference = 0) {\n    if (octave > 1000) {\n      throw new Error(`Invalid octave: ${octave}`);\n    }\n\n    this.name = name;\n    this.accidental = accidental;\n    this.octave = parseInt(octave, 10);\n    this.difference = parseFloat(difference);\n  }\n\n  static fromCents(cents, preferredAccidentals = []) {\n    const rounded = parseInt(Math.round(cents / 50) * 50, 10),\n      difference = cents - rounded,\n      octave = Math.floor(rounded / 1200) + 4,\n      centsWithoutOctave = rounded - ((octave - 4) * 1200),\n      names = Object.keys(nameCents);\n\n    for (const accidental of [...preferredAccidentals, ...defaultPreferredAccidentals]) {\n      const cents = centsWithoutOctave - accidentalCents[accidental],\n        noteName = names.find(key => nameCents[key] === cents);\n      if (noteName !== undefined) {\n        return new Note(noteName, accidental, octave, difference);\n      }\n    }\n\n    throw new Error(`Failed to find note name for cents: ${cents}`);\n  }\n\n  static fromFrequency(frequency, a4 = 440.0, preferredAccidentals = []) {\n    return Note.fromCents(Cents.frequencyToCents(frequency, a4), preferredAccidentals);\n  }\n\n  static fromName(name) {\n    let rest = name;\n    let matches = rest.match(/^[a-g]/i);\n    if (matches === null) {\n      throw new Error(`Invalid note name: ${name}`);\n    }\n    const noteName = matches[0].toUpperCase();\n    rest = name.substr(matches[0].length);\n    if (rest.match(/^\\-[0-9]+$/i)) {\n      throw new Error(`Ambiguous note: ${name} (does \"-\" mean a quarter-flat or a negative?)`);\n    }\n    matches = rest.match(new RegExp('\\/?(\\-?[0-9]+)?( ([\\+-][0-9]+)[c¢])?$', 'iu'));\n    const {\n      1: octave = 4,\n      3: difference = 0\n    } = matches;\n    rest = rest.substr(0, rest.length - matches[0].length);\n    const accidental = normalizeAccidental(rest);\n\n    return new Note(noteName, accidental, octave, difference);\n  }\n\n  toString() {\n    let output = this.name + this.accidental + this.octave;\n    const differenceRounded = Math.round(this.difference);\n    if (differenceRounded !== 0) {\n      output += ' ' + (differenceRounded > 0 ? '+' : '') + Math.round(this.difference) + '¢';\n    }\n\n    return output;\n  }\n\n  get cents() {\n    return nameCents[this.name] +\n      accidentalCents[this.accidental] +\n      ((this.octave - 4) * 1200) +\n      this.difference;\n  }\n\n  getFrequency(a4 = 440.0) {\n    return Cents.centsToFrequency(this.cents - 900, a4);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Note.js","import Cents from './Cents';\nimport { Harmonic } from './index';\n\nfunction getPhysicalDistanceBetweenStops(harmonic, instrument) {\n  return (harmonic.baseStop - harmonic.halfStop) * instrument.stringLength;\n}\n\nfunction getBowedDistance(harmonic, instrument) {\n  return harmonic.halfStop * instrument.stringLength;\n}\n\nexport default class HarmonicCalculator {\n\n  constructor({\n                minStopDistance = 1.0,\n                maxStopDistance = 120.0,\n                minBowedDistance = 20.0,\n                maxSoundingNoteDifference = 50.0\n  } = {}) {\n    this.minStopDistance = minStopDistance;\n    this.maxStopDistance = maxStopDistance;\n    this.minBowedDistance = minBowedDistance;\n    this.maxSoundingNoteDifference = maxSoundingNoteDifference;\n  }\n\n  findArtificialHarmonics(soundingNote, stringFrequency) {\n    let harmonics = [];\n    const soundingNoteFrequency = soundingNote.getFrequency();\n    for (let number = 6; number >= 2; number--) {\n      const fundamental = soundingNoteFrequency / number;\n      if (fundamental > stringFrequency) {\n        const baseStop = Cents.frequencyToStringLength(fundamental, stringFrequency),\n          ratio = (number - 1) / number,\n          halfStop = ratio * baseStop;\n\n        harmonics.push(new Harmonic(halfStop, baseStop, stringFrequency));\n      }\n    }\n\n    return harmonics;\n  }\n\n  findNaturalHarmonics(soundingNote, stringFrequency) {\n    let harmonics = [];\n    for (let number = 1; number <= 8; number++) {\n      // Convert harmonic number to the sounding frequency.\n      const candidateFrequency = Harmonic.getSoundingFrequency(1, 1 / number, stringFrequency);\n\n      // Calculate the difference in cents between the natural harmonic\n      // frequency and the desired sounding note.\n      const difference = Math.abs(Cents.frequencyToCents(candidateFrequency) - soundingNote.cents);\n\n      if (difference <= this.maxSoundingNoteDifference) {\n        for (const stringLength of Harmonic.getStringLengthsFromNumber(number, true)) {\n          harmonics.push(new Harmonic(stringLength, 1, stringFrequency));\n        }\n      }\n    }\n\n    return harmonics;\n  }\n\n  validatePhysicalDistance(harmonic, instrument) {\n    if (!harmonic.isNatural) {\n      const distance = getPhysicalDistanceBetweenStops(harmonic, instrument);\n\n      if (distance < this.minStopDistance || distance > this.maxStopDistance) {\n        return false;\n      }\n    }\n\n    return getBowedDistance(harmonic, instrument) >= this.minBowedDistance;\n  }\n\n  findHarmonics(soundingNote, instrument) {\n    let harmonics = [];\n    for (const stringFrequency of instrument.stringFrequencies) {\n      harmonics.push(\n        ...this.findArtificialHarmonics(soundingNote, stringFrequency),\n        ...this.findNaturalHarmonics(soundingNote, stringFrequency)\n      );\n    }\n\n    harmonics = harmonics.filter((harmonic) => this.validatePhysicalDistance(harmonic, instrument));\n\n    return harmonics;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/HarmonicCalculator.js","import { Note } from './index';\n\nexport const presets = {\n  'violin': {\n    'names': ['E5', 'A4', 'D4', 'G3'],\n    'length': 325\n  },\n  'viola': {\n    'names': ['A4', 'D4', 'G3', 'C3'],\n    'length': 410\n  },\n  'cello': {\n    'names': ['A3', 'D3', 'G2', 'C2'],\n    'length': 690\n  },\n  'double bass': {\n    'names': ['G2', 'D2', 'A1', 'E1'],\n    'length': 1140\n  }\n};\n\nexport default class Instrument {\n  constructor(stringFrequencies = [], stringLength = 500) {\n    this.stringFrequencies = stringFrequencies;\n    this.stringLength = stringLength;\n  }\n\n  static fromNames(stringNames, length = 500) {\n    let strings = [];\n    for (const name of stringNames) {\n      strings.push(Note.fromName(name).getFrequency());\n    }\n\n    return new this(strings, length);\n  }\n\n  static fromPreset(preset) {\n    if (presets[preset] === undefined) {\n      throw new Error(`Preset not found: ${preset}`);\n    }\n\n    return this.fromNames(presets[preset].names, presets[preset].length);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Instrument.js"],"sourceRoot":""}